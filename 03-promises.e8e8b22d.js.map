{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,uBACtCC,EAAcF,SAASC,cAAc,sBACrCE,EAAgBH,SAASC,cAAc,oBA2B7C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAnCiBN,SAASC,cAAc,UAE/Ba,iBAAiB,SAEjC,SAAoBC,GAClBA,EAAIC,iBACJ,IAAMC,GAAclB,EAAamB,MAC3BC,GAAQjB,EAAYgB,MACpBE,GAAUjB,EAAce,MAC9BnB,EAAamB,MAAQ,GACrBhB,EAAYgB,MAAQ,GACpBf,EAAce,MAAQ,GACtB,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlCjB,EAFeiB,EAAI,EACPJ,EAAaI,EAAIF,GAE1BG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAClEsB,QAAQC,IAAI,qBAAoCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvDwB,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA3B,GAAS4B,OAAOM,QAAQ,oBAAmCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OACjEsB,QAAQC,IAAI,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelayEl = document.querySelector(\"input[name='delay']\");\nconst inputStepEl = document.querySelector(\"input[name='step']\");\nconst inputAmountEl = document.querySelector(\" [name='amount']\");\nconst btnCreatePromEl = document.querySelector('button');\n\nbtnCreatePromEl.addEventListener('click', onClickBtn);\n\nfunction onClickBtn(evt) {\n  evt.preventDefault();\n  const delayFirst = +inputDelayEl.value;\n  const step = +inputStepEl.value;\n  const amount = +inputAmountEl.value;\n  inputDelayEl.value = '';\n  inputStepEl.value = '';\n  inputAmountEl.value = '';\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delay = delayFirst + i * step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$inputDelayEl","document","querySelector","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayFirst","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.e8e8b22d.js.map"}